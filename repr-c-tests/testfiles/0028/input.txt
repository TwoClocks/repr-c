// The required alignment of the field is the maximum of the required alignment of the
// underlying type and the __declspec(align) annotation on the field itself.
//
// ```c,msvc,msvc-tc-0028
// __declspec(align(4)) typedef char Char;
//
// #pragma pack(1)
//
// struct A {
//         Char a;
// };
//
// struct B {
//         __declspec(align(4)) char a;
// };
//
// struct C {
//         __declspec(align(8)) Char a;
// };
//
// struct D {
//         __declspec(align(2)) Char a;
// };
//
// static void f(void) {
//         static_assert(_Alignof(struct A) == 4, "");
//         static_assert(_Alignof(struct B) == 4, "");
//         static_assert(_Alignof(struct C) == 8, "");
//         static_assert(_Alignof(struct D) == 4, "");
// }
// ```
Char = @align(4) typedef char

A = @pragma_pack(1) struct {
    a Char,
}

B = struct {
    @align(4) a char,
}

C = struct {
    @align(8) a Char,
}

D = struct {
    @align(2) a Char,
}
