// If all fields in a union have size 0, the size of the whole enum is set to ...
// ... its alignment if it contains at least one non-bitfield.
//
// ```c,msvc,msvc-tc-0024
// union X {
//         long long b[0];
// };
//
// union Y {
//         long long :0;
//         char b[0];
// };
//
// static void f(void) {
//         static_assert(sizeof(union X) == 8, "");
//         static_assert(sizeof(union Y) == 1, "");
// }
// ```
X = { size: 64, alignment: 64 }union {
    { offset: 0, size: 0 }b { size: 0, alignment: 64 }[]{ size: 64, alignment: 64 }long long,
}

Y = { size: 8, alignment: 8 }union {
    _ { size: 64, alignment: 64 }long long:0,
    { offset: 0, size: 0 }b { size: 0, alignment: 8 }[]{ size: 8, alignment: 8 }char,
}
// hash: 4b28bc014ee751f6
