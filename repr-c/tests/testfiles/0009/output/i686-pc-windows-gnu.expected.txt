// Tests the relationship of required, natural, and packing alignment when it comes
// to bitfields

// n < p < r
A = { size: 32, alignment: 32 }@pragma_pack(4) struct {
    { offset: 0, size: 1 }@align(8) i { size: 16, alignment: 16 }short: 1
}

// n < r < p
B = { size: 32, alignment: 32 }@pragma_pack(8) struct {
    { offset: 0, size: 1 }@align(4) i { size: 16, alignment: 16 }short: 1
}

// p < n < r
C = { size: 32, alignment: 16 }@pragma_pack(2) struct {
    { offset: 0, size: 1 }@align(8) i { size: 32, alignment: 32 }int: 1
}

// p < r < n
D = { size: 64, alignment: 16 }@pragma_pack(2) struct {
    { offset: 0, size: 1 }@align(4) i { size: 64, alignment: 64 }long long: 1
}

// r < n < p
E = { size: 32, alignment: 32 }@pragma_pack(8) struct {
    { offset: 0, size: 1 }@align(2) i { size: 32, alignment: 32 }int: 1
}

// r < p < n
F = { size: 64, alignment: 32 }@pragma_pack(4) struct {
    { offset: 0, size: 1 }@align(2) i { size: 64, alignment: 64 }long long: 1
}
// hash: 52d45a82d37c248d
